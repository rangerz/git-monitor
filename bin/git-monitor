#!/usr/bin/env bash
# https://github.com/rangerz/git-monitor

set -o errexit
set -o pipefail
# set -o xtrace

# Make sure English output for git
export LANG=en_US.UTF-8

bin_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
repo_dir=${1:-"$bin_dir/../repos"}
repo_dir="$(cd "$repo_dir" && pwd)"

interval=$(git config monitor.interval || echo 60)

function notify() {
  local title="$1"
  local message="$2"
  local commit_range="$3"

  for notify_command in $bin_dir/*.notify; do
    $notify_command "$@"
  done

  date "+%Y-%m-%d %H:%M:%S"
  echo $title
  if [[ -n "$message" ]]; then
    echo "$message"
  fi
  echo
}

[[ -d "$1" ]] && cd $1

while true; do
  for dir_name in $repo_dir/*/; do
    repo_name=$(basename "$dir_name" .git)

    cd "$dir_name" # into monitor git repo folder

    # fetch_result's ex:
    #   new commit: a4ed343b5..86592fa04 master -> origin/master
    #   new branch:  [new branch] dev -> origin/dev
    #   new tag:     [new tag] v1.0 -> v1.0
    fetch_result=$(git fetch 2>&1 | grep -F -- '->' | sed 's/^ [+*=!-] //' || true)

    while read -r line; do
      case $line in
        *..*)
          commit_range=$(echo "$line" | awk '{print $1}')
          branch=$(echo "$line" | awk '{print $2}')
          title="New commit in $repo_name/$branch"
          if [[ "$line" == *"(forced update)"* ]]; then
            title="$title (forced update)"
          fi
          message=$(git log $commit_range --pretty=format:'%s (%an)')
          notify "$title" "$message" "$commit_range"
          ;;

        *new\ branch*)
          branch=$(echo "$line" | awk '{print $3}')
          title="New branch $repo_name/$branch"
          notify "$title" "" ""
          ;;

        *new\ tag*) # * [new tag] v1.0 -> v1.0
          tag=$(echo "$line" | awk '{print $3}')
          title="New tag $repo_name/$tag"
          notify "$title" ""
          ;;
      esac
    done <<< "$fetch_result"

    cd - &>/dev/null # jump back folder
  done

  if [[ "$interval" -gt "0" ]]; then
    sleep $interval
  else
    exit 0
  fi
done
